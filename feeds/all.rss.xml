<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>MetaHikari</title><link>http://metahikari.github.com/</link><description></description><atom:link href="http://metahikari.github.com/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 30 Jun 2013 18:41:53 +0900</lastBuildDate><item><title>Berimbolo</title><link>http://metahikari.github.com/berimbolo.html</link><description>&lt;h3&gt;Pajama-Flipping?&lt;/h3&gt;
&lt;p&gt;I got Berimbolo’d.  It was probably a pretty slick move to watch and I certainly didn’t see it coming or realize what was happening until my opponent had taken my back and put me in a &lt;a href="http://en.wikipedia.org/wiki/Rear_naked_choke" target="_blank"&gt;rear naked choke&lt;/a&gt;.  Definitely an effective move on the mat.  However, part of me couldn’t help but say “OK, that’s cool, but it probably wouldn’t work too well off the mats.”  &lt;/p&gt;
&lt;p&gt;If, like most non-jiu jitsu geeks, you don’t know what the heck a Berimbolo is, this video is a good intro/demo.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=WHikSZK5jc4" target="_blank"&gt;A whole lot of Berimboloing by Rafael Mendes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basically, it’s a maneuver that has gained a lot of popularity in sport jiu jitsu over the past several years, thanks to the awesome Mendes brothers.  My understanding is that there are various versions of the Berimbolo, but the basic maneuver involves sweeping your opponent onto the ground and taking his/her back.  &lt;/p&gt;
&lt;p&gt;End result: &lt;em&gt;check mate&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;That said, it involves inverting yourself while holding onto someone's belt/gi, something that would not work too well and could even result in you knocking yourself out on a hard surface.  I would be curious to see an example of a Berimbolo succesfully executed off the mat.  &lt;/p&gt;
&lt;p&gt;I’m definitely a firm believer in live sparring at (nearly) full intensity, but my main objective in learning jiu jitsu is to strengthen my self defense abilities.  As such, I don’t think putting a large amount of effort into an “on the mat only” move is what I’m looking for.  I searched for "Berimbolo in MMA" but couldn't find anything.  Maybe I’ll get Berimbolo’d in a competition, but so be it.  I prefer to focus on more practical techniques, like the below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="arm-bar" src="static/images/armbar.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Helmer</dc:creator><pubDate>Sun, 30 Jun 2013 18:41:53 +0900</pubDate><guid>tag:metahikari.github.com,2013-06-30:berimbolo.html</guid></item><item><title>Arduino + Python Meetup</title><link>http://metahikari.github.com/arduino-python-meetup.html</link><description>&lt;h3&gt;Geek Fest&lt;/h3&gt;
&lt;p&gt;&lt;img alt="True Hacker Dojo?" src="static/images/arduino_python_sign.jpg" /&gt;
Whenever I'm in the mood for an interesting meetup, I simply fire up the 'ol &lt;a href="https://www.google.com/calendar/embed?src=fvijvohm91uifvd9hratehf65k@group.calendar.google.com&amp;amp;gsessionid=5uijVw3coaF4PGg5YsoZsg"&gt;IT Study Session calendar&lt;/a&gt;.  If you are a programmer in Japan, this is one of the best resources to learn about tech-related talks, meetups...you name it.  The vast majority of the events are in Japanese, but you will probably also find the occasional English language meetup.  Being a Python programmer, I am generally interested in Python meetups, but recently I have also been intrigued by the Arduino, an open source microcontroller and related programming environment.  Arduino enables one, basically, to program electronics as one sees fit.  The sky is the limit &lt;a href="http://code.google.com/p/arducopter/wiki/ArduCopter?tm=6"&gt;(literally)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, how could I not want to learn something that could potentially result in my own drone copter??&lt;/p&gt;
&lt;p&gt;I bought an Arduino Uno some months ago, but not knowing any C code, I kind of stuck it on the shelf and figured I would get around to it eventually.  Luckily, I discovered a meetup that would combine Arduino with Python, so I signed up.  A day spent programming a micro-controller in Akihabara, center of the geek universe, promised to be the geekiest thing I had ever done, ranking up there with my high school Mathlete days.  Arduino did not disappoint.&lt;/p&gt;
&lt;p&gt;The items needed were a laptop, Arduino controller and breadboard.  Apparently I was also supposed to bring a USB cable to connect my controller to my laptop, but I was able to borrow one from Kitagami sensei.&lt;/p&gt;
&lt;p&gt;In preparation for the event, I had to install the Arduino IDE on my laptop.  Since my laptop runs Debian Squeeze, I was worried about the installation process, but it turns out the Arduino IDE is now in the Debian package manager.  I simply clicked install, entered my password and had a new IDE.  Other preparation included downloading the &lt;a href="http://pyserial.sourceforge.net/"&gt;pyserial&lt;/a&gt; module, which allows Python to interact with my laptop serial port.&lt;/p&gt;
&lt;h3&gt;Turn on, Wire in, Read out&lt;/h3&gt;
&lt;p&gt;&lt;img alt="CERO" src="static/images/arduino_lab.JPG" /&gt;
The shindig got started at 10:15am in CERO, a co-working space in Akihabara.  Having the event in Akihabara was a great idea, because cheap hardware was/is readily available, affording all of the particpants who forgot their Arduino kits, breadboards, etc. easy access to hardware.  Kitagami sensei put on his labcoat to indicate it was time to get to work and proceeded to explain the basics of the microcontroller, noting that the hardware side of Arduino is not so interesting, but things get considerably more exciting on the software side.  As it turned out, we were not going to be writing Python code and running it on the Arduino.  Arduino development is done in Arduino, using C code.  Rather, Python would be used to interact with and utilize the output of our Arduino.&lt;/p&gt;
&lt;p&gt;The project of the day was building a simple temperature sensor that would deliver an analog readout to Arduino, convert that to a temperature and tweet the result.  There are basically three cheap options for how to measure temperature.  One is a semiconductor sensor, or 半導体センサー (はんどうたいセンサー) in Japanese.  Another option is a thermocouple, or 熱電対 (ねつでんつい).  Thermocouples have a very long history of use, but are apparently more difficult to acquire.  The option we used was a thermistor, or サーミスタ, which is quite cheap.  It produces variable resistance, depending on the temperature in its surrounding environment.  Thermistors cost around 30 yen each.  Here is the specific model we used:
&lt;img alt="thermistor" src="static/images/thermistor_package.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;The temperature is measured by the thermistor in degrees Kelvin, so part of the job of the C code was converting to celsius.  An example of an interesting use for this project could be monitoring how the temperature of a small room (as one often finds in Japanese apartments) changes when the Nth person enters the room.&lt;/p&gt;
&lt;p&gt;As the emphasis of the event was on becoming familiar with Arduino and not C, Kitagami sensei provided us with C code to copy and paste into our Arduino IDE.  The gist of the code is reading an analog output from the arduino 1000 times and averaging the value to reach a temperature to report.  My understanding is that this is a never-ending loop, so we get regular updates on this sample temperature.&lt;/p&gt;
&lt;p&gt;C (and Python) code provided by &lt;a href="http://kitagami.org/Study/Arduinopy20130120/20130120.html"&gt;Kitagami.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We originally had an error in the C code.  The AD value is used to translate analog to digital.  We change a wave signal into a serials of numerical samples.  Kitagami sensei mentioned that this type of mathematics is called 離散数学(りさんすうがく), which I confirmed to be "dispersion mathematics" in English.  The AD (analog to digital converter) value was incorrectly defined as 10, instead of 19.53 mV/deg C.  This illustrated how tough hardware can be, as the value of 10 was for a different, but nearly the same, thermistor.  We used the MCP9701 thermal sensor.  The default Serial rate is 9600 in Arduino.  Since the rest of the system would be held up by a slow USB serial connect, we cranked things up to 115,200.  Arduino is apparently kind of slow at sampling, but sufficient for our hobbiest purposes.  A much faster sample rate would be required for mission critical applications, such as controlling brakes in a car.&lt;/p&gt;
&lt;p&gt;The Arduino was rigged using three lines, connecting the ground (GND), power (V_dd from thermistor, 5V) and "analog in" (V_out from thermistor).  In the configuration below, electricity is passing vertically, so as long as the lines are in the vertical column corresponding to the correct thermistor plugs, there should be no issues.  The breadboard looks like a coordinate system with rows and columns, so it is easy to align things.
&lt;img alt="arduino + breadboard + thermistor" src="static/images/arduino_wires.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;I had some serious issues getting my laptop to compile the C code in the Arduino IDE.  I spent probably 1/3 of my time at the meetup trouble-shooting, before eventually getting things to work, although not with my Arduino Uno.  Kitagami sensei lent me an older Arduino board, called the Duemilanove.  I ran the command 'sudo arduino' to bring up my IDE, selected "Duemilanove" as my board type, and changed the baud rate to 115,200.  Of course, there was a lot of time spent toying around before I got it actually working.  The code compiled and I had a stream of output.  For interested parties, there is a summary of issues faced by Debian users &lt;a href="http://playground.arduino.cc/Linux/Debian"&gt;here&lt;/a&gt;
&lt;img alt="temperature output" src="static/images/arduino_screenshot.png" /&gt;&lt;/p&gt;
&lt;h3&gt;API Voodoo&lt;/h3&gt;
&lt;p&gt;Now that we had our C code working and the arduino was spitting out a continuous temperature update, it was time to get some Python code interacting with the serial module.  Data was received from '/dev/ttyUSB0', which is where the Arduino hookup was mounted via USB.  The Twitter API (thanks, Google!) then enabled us to post the temperature on twitter.  You can see the result here:
&lt;blockquote class="twitter-tweet"&gt;&lt;p&gt;sup y'all, current temperature in Akihabara is20.32&lt;/p&gt;&amp;mdash; matt helmer (@metahikari) &lt;a href="https://twitter.com/metahikari/status/292899875467689985"&gt;January 20, 2013&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;h3&gt;Wrap up&lt;/h3&gt;
&lt;p&gt;I had a lot of fun at this event.  Arduino is a very flexible tool, both in terms of functionality and educational value.  Kitagami sensei, bubbling with enthusiasm for Arduino, reminded me of my semi-absent-minded, but very fun high school physics teacher.  I hope to attend future events, as there was talk of incorporating Raspberry Pi into the Arduino mix.&lt;/p&gt;
&lt;p&gt;Of the 30 or so people who showed up, probably 26 were Apple users.  As such, the recommended preparation for the event was not really adequate for Linux users.  I should have done more homework in advance, as that could have prevented me from wasting an hour of trouble shooting.  I suppose next time I will need to do more preparation to ensure my hardware is compatible with my OS, but that's not such a big deal and is really my own fault.&lt;/p&gt;
&lt;p&gt;All in all, it was a good day and I learned about some new topics while getting my hands dirty with a little C code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Helmer</dc:creator><pubDate>Sun, 03 Feb 2013 09:38:08 +0900</pubDate><guid>tag:metahikari.github.com,2013-02-03:arduino-python-meetup.html</guid></item><item><title>The Connection</title><link>http://metahikari.github.com/the-connection.html</link><description>&lt;h3&gt;Beginner's Mind&lt;/h3&gt;
&lt;p&gt;Trying to improve yourself by learning a new skill can be intense. You may feel like you're in over your head.  Like you're on the verge of acute embarassment.  The pit of your stomach suddenly feels hollow, like you forgot your arms and legs.  There must be some evolutionary explanation for this instinctive reaction to the possibility of failing at something new.  Perhaps it simply boils down to risk aversion.  Whatever the case, it is a reaction that one must overcome in order to make gains.  The decision to learn programming and, more recently, BJJ, has for me been, more than any other motivating factor, about overcoming the fear of making mistakes.&lt;/p&gt;
&lt;h3&gt;Zen of Python&lt;/h3&gt;
&lt;p&gt;I have always enjoyed using computers, but, whenever I compared myself to peers who had been programming for years, I always felt like it was too late for me to learn to code.  That is a pretty sad point of view for a person of any age, let alone someone still in his 20's.  The more time passed, the more unlikely it seemed that I would ever learn a programming language.&lt;/p&gt;
&lt;p&gt;At some point, however, I decided that enough was enough: I would learn to code.  But where to start?  Although the amount of free resources available to beginners nowadays is incredible, in some ways it is like drinking water from a firehose.  I asked around.  A few names regularly popped up.  I had heard from various sources that either Python or Ruby would be a good first language.  I recall an article which described Python as having, generally, one &lt;em&gt;best&lt;/em&gt; way of doing things.  I liked the idea of there being a correct way of doing things, so Python it was.&lt;/p&gt;
&lt;p&gt;I ordered the book &lt;a href="http://shop.oreilly.com/product/9781565924642.do"&gt;&lt;em&gt;Learning Python&lt;/em&gt;&lt;/a&gt;, by Mark Lutz.  Midway through the first chapter I realized that I had no idea how to use the Mac OS X command line interface (CLI).  This is where having a computer-savvy girlfriend (now wife) paid off.  She got me the easy-to-understand reference book &lt;a href="http://www.amazon.com/The-Mac-OS-Command-Line/dp/0782143547"&gt;&lt;em&gt;The Mac OS X Command Line: Unix Under the Hood&lt;/em&gt;&lt;/a&gt;, by Kirk McElhearn.  This was enough to familiarize myself with the basics of using the Mac Terminal and, subsequently, my ability to trudge through &lt;em&gt;Learning Python&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;At this point in my programming career, it is safe to say that I am fully addicted to learning.  Probably every programmer can relate to that "I was lost, but now I see" sort of &lt;em&gt;a-ha!&lt;/em&gt; moment.  Tremendous frustration, followed by deep thought, followed by a completely unrelated activity allowing the mind time to digest the problem (walking/showering/washing dishes), and at last, the solution surfaces!  It is a joyous feeling.  Knowing that the types of problems I have solved as an &lt;em&gt;extremely&lt;/em&gt; mediocre programmer pale in comparison to challenges solved by professional programmers is an exciting notion.  When I think about the ocean of programming experiences that lies ahead of me, it is exciting.  Creative problem solving is what programming is all about, and I am loving it.&lt;/p&gt;
&lt;h3&gt;Rolling in the Deep&lt;/h3&gt;
&lt;p&gt;Getting into BJJ was not dissimilar to getting into Python.  I had always wanted to train in a martial art, but again, the more time passed without taking that first step, the more imposing that first step seemed to grow.  As I have grown older, the ability to defend myself and loved ones has become increasingly important to me.  The ability to avoid a violent confrontation is always first in my mind (I try to follow the Gracie family ideas on self-defense: &lt;strong&gt;D&lt;/strong&gt;iffuse, &lt;strong&gt;E&lt;/strong&gt;vade, &lt;strong&gt;A&lt;/strong&gt;ttack), but I also realize that you never know when some jerk on the street is going to catch you off guard (thank you, Youtube).&lt;/p&gt;
&lt;p&gt;Given the multitude of martial arts, why did I choose to study BJJ?  Honestly, I simply recalled hearing the Gracie name from early UFC days and thought, hey, if Royce Gracie can take down giants, then maybe it could work for me, too (not that I have any illusions about stepping into an &lt;a href="http://www.ufc.com/discover/sport/octagon"&gt;octagon&lt;/a&gt;).  I googled "BJJ Tokyo" and soon found out about &lt;a href="http://bjjaoyama.net/"&gt;Tri-Force Aoyama&lt;/a&gt;.  I contacted the head instructor, Yuki Ishikawa, and found him to be very welcoming, so I made arrangements for a trial lesson.&lt;/p&gt;
&lt;p&gt;One of my favorite writers, Sam Harris, wrote an excellent blog post about his &lt;a href="http://www.samharris.org/blog/item/the-pleasures-of-drowning"&gt;first time training BJJ&lt;/a&gt;.  In BJJ, sparring is commonly referred to as "rolling", since so much of BJJ is spent honing one's ground-fighting skills.  Sam Harris describes his first time rolling against an experienced BJJ practitionar as akin to drowning.  I felt the same way at my trial lesson.&lt;/p&gt;
&lt;p&gt;I have a lot of experience with weight-training and am relatively strong, but I was rendered absolutely helpless by a blue belt opponent who weighed probably 25kg less than me.  All of my strength applied directly against my opponent failed me.  Rather, my opponent used my action against me, deflecting my strength via leverage and technique.  I quickly became exhausted and was left with no strength, and little way of defending myself.  Getting choked by someone whom you expect to manhandle is a humbling experience.  That first trial lesson was, for me, a revelation of the power of BJJ.  An apt description would perhaps be "painful befuddlement, followed by enlightenment".  I have been hooked ever since.&lt;/p&gt;
&lt;h3&gt;Where There's a Will...&lt;/h3&gt;
&lt;p&gt;I am not yet very good at either of these endavours.  That is not the point.  In Japanese, traditional fighting systems fall under a broader philosophy known as "Bushido" (武士道).  The last character, "do", means something like "the road", or "the way".  It can signify a method of living.  It represents, to me, the idea of a journey, or process required to master the complexities of martial arts (and programming).  It signifies a learning curve that must be traversed on the way to a higher state of thought and physical practice.  Both BJJ and programming are providing me an education in step-by-step learning, learning by doing, and piecing together basic principles to create effective tools.  Again, I am not very good at either of these arts.  But someday, I will be a few miles from where I started, and that's the point.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tri-Force Aoyama, Tokyo, Japan, Dec. 2012" src="static/images/dojo.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Helmer</dc:creator><pubDate>Sun, 03 Feb 2013 09:20:48 +0900</pubDate><guid>tag:metahikari.github.com,2013-02-03:the-connection.html</guid></item><item><title>About Me</title><link>http://metahikari.github.com/about-me.html</link><description>&lt;h2&gt;Some Facts&lt;/h2&gt;
&lt;p&gt;Tokyo, Japan is my current home, but I was born and raised in western Illinois.  I have traded in corn for rice and sashimi.&lt;/p&gt;
&lt;p&gt;I'm a graduate of &lt;a href="http://www.northwestern.edu/"&gt;Northwestern University&lt;/a&gt;, where I studied Mathematics and Japanese.  Within the world of Mathematics, one could say I focused more on the Algebra side of things.  I enjoy learning Mathematics to this day, especially anything related to &lt;a href="http://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems"&gt;Gödel's Incompleteness Theorems&lt;/a&gt; and the foundations of modern mathematics.&lt;/p&gt;
&lt;p&gt;As is (was?) perhaps common for many Math graduates in the 21st-century, I eventually became a Market Risk guy covering Fixed-Income at an Investment Bank.  Nowadays I earn my keep wearing multiple hats in the ecommerce world.  I enjoy being a part of a young company where the days are unpredictable.  I aspire to be part of a software-related startup or business endeavour in the future, and enjoy discussing business opportunities in general, but especially related to Japan and the US.&lt;/p&gt;
&lt;p&gt;I hope to post a thorough résumé in the near future.&lt;/p&gt;
&lt;h2&gt;Thinkers&lt;/h2&gt;
&lt;p&gt;I regularly enjoy reading the opinions of the following thinkers.  This list is far from complete.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.fooledbyrandomness.com"&gt;Nassim Nicholas Taleb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Peter_Thiel"&gt;Peter Thiel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.paulgraham.com/"&gt;Paul Graham&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.samharris.org/"&gt;Sam Harris&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Helmer</dc:creator><pubDate>Thu, 31 Jan 2013 05:53:46 +0900</pubDate><guid>tag:metahikari.github.com,2013-01-31:about-me.html</guid></item><item><title>About MetaHikari</title><link>http://metahikari.github.com/about-metahikari.html</link><description>&lt;h2&gt;Static, but Changing&lt;/h2&gt;
&lt;p&gt;Welcome to MetaHikari, an experiment in static site blog design!&lt;/p&gt;
&lt;p&gt;MetaHikari is generated using &lt;a href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt;, a Python-based, &lt;a href="http://en.wikipedia.org/wiki/Static_web_page"&gt;static site&lt;/a&gt; generator.  I utilize &lt;a href="http://github.com/"&gt;GitHub&lt;/a&gt; for free hosting.  Since my site is unchanging until I update it, there is no need to worry about maintaining a database for dynamic content.&lt;/p&gt;
&lt;p&gt;More importantly, MetaHikari is where I write about my struggles and (minor) triumphs in the worlds of &lt;strong&gt;programming&lt;/strong&gt; and &lt;strong&gt;Brazilian jiu jitsu (BJJ)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Please forgive the various design/content changes that will take place as I get things up and running!&lt;/p&gt;
&lt;h2&gt;Learning to Code the Hard Way&lt;/h2&gt;
&lt;p&gt;Programming is an activity that can be learned pretty much anywhere these days.  There is a long list of options for online learning, such as coursera and opencourseware.  I am perhaps a bit old-fashioned and am learning largely through textbooks and friends.  I write about my experiences learning code in Tokyo, Japan.  Hopefully, I will also attend and write about various programming related meetups in Tokyo.&lt;/p&gt;
&lt;p&gt;This blog will document my studies, so it may be of interest to other wannabe hackers and beginners.  Learning to code has so far been extremely intellectually rewarding, so I would like to share my enthusiasm about code and (eventually) make some cool stuff.&lt;/p&gt;
&lt;h2&gt;The Gentle Art&lt;/h2&gt;
&lt;p&gt;A submission-based, grappling martial art, BJJ places an emphasis on ground fighting and full-speed sparring.  Something I love about BJJ is that it challenges both my body and mind.  Indeed, the &lt;em&gt;mental&lt;/em&gt; aspect is equally as satisfying as the physical training.  I train at an awesome &lt;a href="http://bjjaoyama.net/"&gt;gym&lt;/a&gt; with a great group of dedicated guys.&lt;/p&gt;
&lt;p&gt;As a citizen of Japan, home to numerous traditional martial arts, it is perhaps a bit ironic that I am blogging about a Brazilian system (although even BJJ has its roots in classical Japanese juu-jutsu).  Regardless, I thought that other BJJ students around the world would enjoy reading about what training is like in central Tokyo.  I will try to keep things interesting!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Helmer</dc:creator><pubDate>Sun, 13 Jan 2013 08:37:14 +0900</pubDate><guid>tag:metahikari.github.com,2013-01-13:about-metahikari.html</guid></item></channel></rss>